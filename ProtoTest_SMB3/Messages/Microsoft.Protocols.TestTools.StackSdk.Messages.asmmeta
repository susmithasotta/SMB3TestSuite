.assembly extern 'mscorlib'
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89)
  .ver clr2.0
}
.assembly 'Microsoft.Protocols.TestTools.StackSdk.Messages'
{
  .custom instance void ['mscorlib']'System.Runtime.InteropServices'.'ComVisibleAttribute'::.ctor(bool) = (01 00 00 00 00)
  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 27 21 4B 24 74 FA DB 92 4F FE 05 6B A0 3A A2 C5 8C 86 34 06 56 D2 36 DA 85 76 39 CA 4F 0D AD 6E C0 ED 19 B3 08 B9 B3 40 D7 84 2C 40 80 13 A4 44 64 92 95 E7 65 C9 92 8E 31 38 FB 65 B9 3F 4F BF F3 02 4E 89 53 9A EC FB 55 DB D2 F6 E0 EB B7 BF D2 1F 28 23 97 EF 78 48 E3 2D F1 4B 93 6F 5B 7C 57 75 B5 79 85 C2 F1 BE 90 68 B7 0D 43 6C BA 82 2F 62 FD F6 C6 33 7E B5 8B 12 EB CB 7D 8C FD BC)
  .hash algorithm 0x00008004
  .ver corext
}
.namespace 'Microsoft.Protocols.TestTools'
{
  .class public 'IdentifierBinding`1'<Target>
    extends ['mscorlib']'System'.'Object'
  {
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'host')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
    .method public hidebysig 
      instance void 'Reset'()
    {
      ret
    }
    .method public hidebysig 
      instance void 'Bind'(int32 'id', !0 'target')
    {
      ret
    }
    .method public hidebysig 
      instance void 'Unbind'(int32 'id')
    {
      ret
    }
    .method public hidebysig 
      instance int32 'GetIdentifier'(!0 'target')
    {
      ret
    }
    .method public hidebysig 
      instance int32 'GetOrCreateIdentifier'(!0 'target')
    {
      ret
    }
    .method public hidebysig 
      instance !0 'GetTarget'(int32 'id')
    {
      ret
    }
    .method public hidebysig 
      instance bool 'IsIdentifierBound'(int32 'id')
    {
      ret
    }
    .method public hidebysig 
      instance bool 'IsTargetBound'(!0 'target')
    {
      ret
    }
    .method public hidebysig 
      instance int32 'GetUnusedIdentifier'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance class ['mscorlib']'System.Collections.Generic'.'IDictionary`2'<int32,!0> 'get_Dictionary'()
    {
      ret
    }
    .property instance class ['mscorlib']'System.Collections.Generic'.'IDictionary`2'<int32,!0> 'Dictionary'()
    {
      .get instance class ['mscorlib']'System.Collections.Generic'.'IDictionary`2'<int32,!0> 'Microsoft.Protocols.TestTools'.'IdentifierBinding`1'::'get_Dictionary'()
    }
  }
}
.namespace 'Microsoft.Protocols.TestTools.StackSdk.Messages'
{
  .class public sequential sealed 'AvailableEvent'
    extends ['mscorlib']'System'.'ValueType'
  {
    .method public hidebysig specialname 
      instance class ['mscorlib']'System.Reflection'.'EventInfo' 'get_Event'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance object 'get_Target'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance object[] 'get_Parameters'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class ['mscorlib']'System.Reflection'.'EventInfo' 'eventInfo', object 'target', object[] 'parameters')
    {
      ret
    }
    .method public virtual hidebysig 
      instance string 'ToString'()
    {
      ret
    }

    //This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
    .field private int32 __Asmmeta_Private_Field
    .property instance class ['mscorlib']'System.Reflection'.'EventInfo' 'Event'()
    {
      .get instance class ['mscorlib']'System.Reflection'.'EventInfo' 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'AvailableEvent'::'get_Event'()
    }
    .property instance object[] 'Parameters'()
    {
      .get instance object[] 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'AvailableEvent'::'get_Parameters'()
    }
    .property instance object 'Target'()
    {
      .get instance object 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'AvailableEvent'::'get_Target'()
    }
  }
  .class public 'Channel'
    extends ['mscorlib']'System'.'Object'
    implements ['mscorlib']'System'.'IDisposable'
  {
    .method public hidebysig specialname 
      instance class ['mscorlib']'System.IO'.'Stream' 'get_Stream'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'host', class ['mscorlib']'System.IO'.'Stream' 'stream')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'host', class ['mscorlib']'System.IO'.'Stream' 'stream', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration' 'marshalingConfig')
    {
      ret
    }
    .method public hidebysig specialname 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler' 'get_Marshaler'()
    {
      ret
    }
    .method public hidebysig 
      instance void 'Close'()
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance void 'Dispose'()
    {
      ret
    }
    .method family virtual hidebysig 
      instance void 'Finalize'()
    {
      ret
    }
    .method family virtual hidebysig newslot 
      instance void 'Dispose'(bool 'disposing')
    {
      ret
    }
    .method public virtual hidebysig newslot 
      instance !!0 'Read'<T>()
    {
      ret
    }
    .method public hidebysig 
      instance uint8[] 'ReadBytes'(int32 'count')
    {
      ret
    }
    .method public hidebysig 
      instance !!0 'Peek'<T>(int32 'offset')
    {
      ret
    }
    .method public hidebysig 
      instance void 'BeginWriteGroup'()
    {
      ret
    }
    .method public hidebysig 
      instance void 'EndWriteGroup'()
    {
      ret
    }
    .method public virtual hidebysig newslot 
      instance void 'Write'<T>(!!0 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'WriteBytes'(uint8[] 'data')
    {
      ret
    }
    .property instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler' 'Marshaler'()
    {
      .custom instance void ['mscorlib']'System'.'ObsoleteAttribute'::.ctor(string) = (01 00 3E 54 68 65 20 27 4D 61 72 73 68 61 6C 65 72 27 20 70 72 6F 70 65 72 74 79 20 69 73 20 6F 62 73 6F 6C 65 74 65 2E 20 44 6F 20 6E 6F 74 20 63 61 6C 6C 20 74 68 69 73 20 6D 65 74 68 6F 64 2E 00 00)
      .get instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler' 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'Channel'::'get_Marshaler'()
    }
    .property instance class ['mscorlib']'System.IO'.'Stream' 'Stream'()
    {
      .get instance class ['mscorlib']'System.IO'.'Stream' 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'Channel'::'get_Stream'()
    }
  }
  .class public 'EventQueue'
    extends ['mscorlib']'System'.'Object'
  {
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'host', int32 'maxSize')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'host')
    {
      ret
    }
    .method public hidebysig specialname 
      instance valuetype ['mscorlib']'System'.'TimeSpan' 'get_Timeout'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_Timeout'(valuetype ['mscorlib']'System'.'TimeSpan' 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'Expect'<T>(class ['mscorlib']'System.Reflection'.'EventInfo' 'eventInfo', !!0 'handler')
    {
      ret
    }
    .method public hidebysig 
      instance int32 'ExpectOneOf'<T1, T2>(class ['mscorlib']'System.Reflection'.'EventInfo' 'info1', !!0 'handler1', class ['mscorlib']'System.Reflection'.'EventInfo' 'info2', !!1 'handler2')
    {
      ret
    }
    .method public hidebysig 
      instance void 'LogEvent'(class ['mscorlib']'System.Reflection'.'EventInfo' 'info', object[] 'arguments')
    {
      .param [2]
      .custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
      ret
    }
    .property instance valuetype ['mscorlib']'System'.'TimeSpan' 'Timeout'()
    {
      .get instance valuetype ['mscorlib']'System'.'TimeSpan' 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'EventQueue'::'get_Timeout'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'EventQueue'::'set_Timeout'(valuetype ['mscorlib']'System'.'TimeSpan')
    }
  }
  .class public interface abstract 'IRuntimeHost'
  {
    .method public virtual hidebysig newslot abstract specialname 
      instance bool 'get_MarshallerTrace'()
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance bool 'get_DisableValidation'()
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'add_AssertChecker'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'> 'value')
      synchronized 
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'remove_AssertChecker'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'> 'value')
      synchronized 
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'add_AssumeChecker'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'> 'value')
      synchronized 
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'remove_AssumeChecker'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'> 'value')
      synchronized 
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'add_DebugChecker'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'> 'value')
      synchronized 
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'remove_DebugChecker'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'> 'value')
      synchronized 
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'add_MessageLogger'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'> 'value')
      synchronized 
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'remove_MessageLogger'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'> 'value')
      synchronized 
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'add_RequirementLogger'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'RequirementCaptureEventArgs'> 'value')
      synchronized 
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'remove_RequirementLogger'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'RequirementCaptureEventArgs'> 'value')
      synchronized 
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'Assert'(bool 'condition', string 'message', object[] 'parameters')
    {
      .param [3]
      .custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'Assume'(bool 'condition', string 'message', object[] 'parameters')
    {
      .param [3]
      .custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'Debug'(bool 'condition', string 'message', object[] 'parameters')
    {
      .param [3]
      .custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'AddLog'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'kind', string 'message', object[] 'parameters')
    {
      .param [3]
      .custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'CaptureRequirement'(string 'protocolName', int32 'requirementId', string 'description')
    {
    }
    .event class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'> 'AssertChecker'
    {
      .addon instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost'::'add_AssertChecker'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'>)
      .removeon instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost'::'remove_AssertChecker'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'>)
    }
    .event class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'> 'AssumeChecker'
    {
      .addon instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost'::'add_AssumeChecker'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'>)
      .removeon instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost'::'remove_AssumeChecker'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'>)
    }
    .event class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'> 'DebugChecker'
    {
      .addon instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost'::'add_DebugChecker'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'>)
      .removeon instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost'::'remove_DebugChecker'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'>)
    }
    .event class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'> 'MessageLogger'
    {
      .addon instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost'::'add_MessageLogger'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'>)
      .removeon instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost'::'remove_MessageLogger'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'>)
    }
    .event class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'RequirementCaptureEventArgs'> 'RequirementLogger'
    {
      .addon instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost'::'add_RequirementLogger'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'RequirementCaptureEventArgs'>)
      .removeon instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost'::'remove_RequirementLogger'(class ['mscorlib']'System'.'EventHandler`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'RequirementCaptureEventArgs'>)
    }
    .property instance bool 'DisableValidation'()
    {
      .get instance bool 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost'::'get_DisableValidation'()
    }
    .property instance bool 'MarshallerTrace'()
    {
      .get instance bool 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost'::'get_MarshallerTrace'()
    }
  }
  .class public sealed 'InitializerAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 40 00 00 00 00 00)
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
  }
  .class public sealed 'LogKind'
    extends ['mscorlib']'System'.'Enum'
  {
    .field public rtspecialname specialname int32 'value__'
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'CheckFailed' = int32(0x00000003)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'CheckSucceeded' = int32(0x00000002)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'Checkpoint' = int32(0x00000001)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'Comment' = int32(0x00000004)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'Debug' = int32(0x00000006)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'UnKnown' = int32(0x00000000)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'Warning' = int32(0x00000005)
  }
  .class public 'MessageLogEventArgs'
    extends ['mscorlib']'System'.'EventArgs'
  {
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'kind', string 'message', object[] 'parameters')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'kind', bool 'condition', string 'message', object[] 'parameters')
    {
      ret
    }
    .method public hidebysig specialname 
      instance bool 'get_Condition'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance string 'get_Message'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'get_LogEntryKind'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance object[] 'get_Parameters'()
    {
      ret
    }
    .property instance bool 'Condition'()
    {
      .get instance bool 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'::'get_Condition'()
    }
    .property instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'LogEntryKind'()
    {
      .get instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'LogKind' 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'::'get_LogEntryKind'()
    }
    .property instance string 'Message'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'::'get_Message'()
    }
    .property instance object[] 'Parameters'()
    {
      .get instance object[] 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageLogEventArgs'::'get_Parameters'()
    }
  }
  .class public abstract sealed 'MessageRuntimeHelper'
    extends ['mscorlib']'System'.'Object'
  {
    .method public static hidebysig 
      bool 'TryGetModelingSequence'(class ['mscorlib']'System'.'Type' 'typeArg', [out] class ['mscorlib']'System'.'Type'& 'genericSequence')
    {
      ret
    }
    .method public static hidebysig 
      string 'Describe'<T>(!!0 'value')
    {
      ret
    }
  }
  .class public 'MessageUtils'
    extends ['mscorlib']'System'.'Object'
    implements ['mscorlib']'System'.'IDisposable'
  {
    .class nested public sealed 'MessageType'
      extends ['mscorlib']'System'.'Enum'
    {
      .field public rtspecialname specialname int32 'value__'
      .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageUtils'/'MessageType' 'Block' = int32(0x00000000)
      .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageUtils'/'MessageType' 'Rpc' = int32(0x00000001)
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'host')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'host', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration' 'config')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'host', valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageUtils'/'MessageType' 'type')
    {
      ret
    }
    .method public hidebysig specialname 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'get_RuntimeHost'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance bool 'get_RejectNullValue'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_RejectNullValue'(bool 'value')
    {
      ret
    }
    .method public hidebysig 
      instance int32 'GetSize'(object 'value')
    {
      ret
    }
    .method public hidebysig 
      instance !!0 'Create'<T>()
    {
      ret
    }
    .method public hidebysig 
      instance void 'Initialize'<T>(!!0& 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'Validate'<T>(!!0 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'Validate'(object 'value', class ['mscorlib']'System.Reflection'.'ICustomAttributeProvider' 'provider', class ['mscorlib']'System.Collections.Generic'.'IDictionary`2'<string,object> 'symbolStore')
    {
      ret
    }
    .method public hidebysig 
      instance void 'Validate'(object 'value')
    {
      ret
    }
    .method public hidebysig 
      instance bool 'CheckValueByEnum'(object 'value', class ['mscorlib']'System'.'Type' 'type')
    {
      ret
    }
    .method public static hidebysig 
      bool 'CheckValueByRange'(object 'inValue', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'PossibleValueRangeAttribute' 'possibleValueAttribute')
    {
      ret
    }
    .method public hidebysig 
      instance string 'ToString'(object 'value')
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance void 'Dispose'()
    {
      ret
    }
    .method family virtual hidebysig 
      instance void 'Finalize'()
    {
      ret
    }
    .method family virtual hidebysig newslot 
      instance void 'Dispose'(bool 'disposing')
    {
      ret
    }
    .method public virtual hidebysig newslot specialname 
      instance bool 'get_DisableValidation'()
    {
      ret
    }
    .property instance bool 'DisableValidation'()
    {
      .get instance bool 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageUtils'::'get_DisableValidation'()
    }
    .property instance bool 'RejectNullValue'()
    {
      .get instance bool 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageUtils'::'get_RejectNullValue'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageUtils'::'set_RejectNullValue'(bool)
    }
    .property instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'RuntimeHost'()
    {
      .get instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'MessageUtils'::'get_RuntimeHost'()
    }
  }
  .class public 'RequirementCaptureEventArgs'
    extends ['mscorlib']'System'.'EventArgs'
  {
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(int32 'requirementId', string 'description')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(string 'protocolName', int32 'requirementId', string 'description')
    {
      ret
    }
    .method public hidebysig specialname 
      instance string 'get_ProtocolName'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance int32 'get_RequirementId'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance string 'get_RequirementDescription'()
    {
      ret
    }
    .property instance string 'ProtocolName'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'RequirementCaptureEventArgs'::'get_ProtocolName'()
    }
    .property instance string 'RequirementDescription'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'RequirementCaptureEventArgs'::'get_RequirementDescription'()
    }
    .property instance int32 'RequirementId'()
    {
      .get instance int32 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'RequirementCaptureEventArgs'::'get_RequirementId'()
    }
  }
  .class public abstract sealed 'RuntimeHostProvider'
    extends ['mscorlib']'System'.'Object'
  {
    .method public static hidebysig 
      void 'Initialize'(bool 'marshallerTrace', bool 'disablevalidation')
    {
      ret
    }
    .method public static hidebysig 
      void 'Cleanup'()
    {
      ret
    }
    .method public static hidebysig specialname 
      class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'get_RuntimeHost'()
    {
      ret
    }
    .property class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'RuntimeHost'()
    {
      .get class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'RuntimeHostProvider'::'get_RuntimeHost'()
    }
  }
  .class public 'ValidationChannel'
    extends 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'Channel'
  {
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'host', class ['mscorlib']'System.IO'.'Stream' 'stream')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'host', class ['mscorlib']'System.IO'.'Stream' 'stream', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration' 'marshalingConfig')
    {
      ret
    }
    .method public virtual hidebysig 
      instance !!0 'Read'<T>()
    {
      ret
    }
    .method public virtual hidebysig 
      instance void 'Write'<T>(!!0 'value')
    {
      ret
    }
    .method family virtual hidebysig 
      instance void 'Dispose'(bool 'disposing')
    {
      ret
    }
  }
  .class public sealed 'ValidatorAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 40 00 00 00 00 00)
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
  }
}
.namespace 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'
{
  .class public sealed 'AlignedAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 04 01 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(bool 'aligned')
    {
      ret
    }
  }
  .class public sealed 'Asn1Attribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 04 01 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'EncodingRule' 'rule')
    {
      ret
    }
  }
  .class public abstract 'BaseExpression'
    extends ['mscorlib']'System'.'Object'
    implements 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression'
  {
    .method public virtual hidebysig newslot 
      instance void 'Accept'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpressionVisitor' 'visitor')
    {
      ret
    }
    .method family hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
  }
  .class public abstract 'BaseNode'
    extends ['mscorlib']'System'.'Object'
    implements 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'INode'
  {
    .method family hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
    .method public virtual hidebysig newslot specialname 
      instance int32 'get_ChildCount'()
    {
      ret
    }
    .method public virtual hidebysig newslot 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'INode' 'GetChild'(int32 'childIndex')
    {
      ret
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'get_Type'()
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance string 'get_Text'()
    {
    }
    .method public virtual hidebysig newslot 
      instance void 'AddChild'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'INode' 'child')
    {
      ret
    }
    .method public virtual hidebysig abstract 
      instance string 'ToString'()
    {
    }
    .method public virtual hidebysig newslot 
      instance string 'DumpTree'()
    {
      ret
    }
    .property instance int32 'ChildCount'()
    {
      .get instance int32 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BaseNode'::'get_ChildCount'()
    }
    .property instance string 'Text'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BaseNode'::'get_Text'()
    }
    .property instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Type'()
    {
      .get instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BaseNode'::'get_Type'()
    }
  }
  .class public 'BinaryExpression'
    extends 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BaseExpression'
  {
    .method public hidebysig specialname 
      instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'get_Type'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_Type'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'get_LeftExpression'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_LeftExpression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'get_RightExpression'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_RightExpression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'type', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'leftExpression', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'rightExpression')
    {
      ret
    }
    .method public virtual hidebysig 
      instance void 'Accept'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpressionVisitor' 'visitor')
    {
      ret
    }
    .property instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'LeftExpression'()
    {
      .get instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpression'::'get_LeftExpression'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpression'::'set_LeftExpression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression')
    }
    .property instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'RightExpression'()
    {
      .get instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpression'::'get_RightExpression'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpression'::'set_RightExpression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression')
    }
    .property instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'Type'()
    {
      .get instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpression'::'get_Type'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpression'::'set_Type'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType')
    }
  }
  .class public sealed 'BinaryExpressionType'
    extends ['mscorlib']'System'.'Enum'
  {
    .field public rtspecialname specialname int32 'value__'
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'And' = int32(0x00000000)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'BitAnd' = int32(0x0000000F)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'BitOr' = int32(0x00000010)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'BitXor' = int32(0x00000011)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'Div' = int32(0x0000000B)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'Equal' = int32(0x00000002)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'Greater' = int32(0x00000007)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'GreaterOrEqual' = int32(0x00000005)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'Lesser' = int32(0x00000006)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'LesserOrEqual' = int32(0x00000004)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'Minus' = int32(0x00000008)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'Mod' = int32(0x0000000A)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'Multiply' = int32(0x0000000C)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'NotEqual' = int32(0x00000003)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'Or' = int32(0x00000001)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'Plus' = int32(0x00000009)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'ShiftLeft' = int32(0x0000000D)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'ShiftRight' = int32(0x0000000E)
  }
  .class public sealed 'BitAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 01 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
  }
  .class public 'BlockMarshalingConfiguration'
    extends 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration'
  {
    .method family hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
    .method public static hidebysig specialname 
      class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration' 'get_Configuration'()
    {
      ret
    }
    .property class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration' 'Configuration'()
    {
      .get class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BlockMarshalingConfiguration'::'get_Configuration'()
    }
  }
  .class public sealed 'ByteOrderAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 01 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'EndianType' 'endian')
    {
      ret
    }
  }
  .class public sealed 'CaseAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 01 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(string 'expression')
    {
      ret
    }
  }
  .class public sealed 'CaseDefaultAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 01 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
  }
  .class public 'ConditionalExpression'
    extends 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BaseExpression'
  {
    .method public hidebysig specialname 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'get_FirstExpression'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_FirstExpression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'get_SecondExpression'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_SecondExpression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'get_ThirdExpression'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_ThirdExpression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'firstExpression', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'secondExpression', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'thirdExpression')
    {
      ret
    }
    .method public virtual hidebysig 
      instance void 'Accept'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpressionVisitor' 'visitor')
    {
      ret
    }
    .property instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'FirstExpression'()
    {
      .get instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ConditionalExpression'::'get_FirstExpression'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ConditionalExpression'::'set_FirstExpression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression')
    }
    .property instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'SecondExpression'()
    {
      .get instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ConditionalExpression'::'get_SecondExpression'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ConditionalExpression'::'set_SecondExpression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression')
    }
    .property instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'ThirdExpression'()
    {
      .get instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ConditionalExpression'::'get_ThirdExpression'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ConditionalExpression'::'set_ThirdExpression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression')
    }
  }
  .class public sealed 'CustomMarshalerAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 0C 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(class ['mscorlib']'System'.'Type' 'type')
    {
      ret
    }
  }
  .class public abstract sealed 'DatatypeInfoProvider'
    extends ['mscorlib']'System'.'Object'
  {
    .method public static hidebysig 
      bool 'IsPredefinedDatatype'(string 'datatypeName')
    {
      ret
    }
    .method public static hidebysig 
      bool 'isPredefinedModifier'(string 'modifier')
    {
      ret
    }
    .method public static hidebysig 
      int32 'GetRpcDatatypeLength'(string 'datatypeName')
    {
      ret
    }
    .method public static hidebysig 
      void 'GetDatatypeLength'(string 'datatypeName', [out] string& 'length', [out] string& 'mode')
    {
      ret
    }
  }
  .class public sealed 'EncodingRule'
    extends ['mscorlib']'System'.'Enum'
  {
    .field public rtspecialname specialname int32 'value__'
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'EncodingRule' 'Ber' = int32(0x00000000)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'EncodingRule' 'Der' = int32(0x00000001)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'EncodingRule' 'Per' = int32(0x00000002)
  }
  .class public sealed 'EndianType'
    extends ['mscorlib']'System'.'Enum'
  {
    .field public rtspecialname specialname int32 'value__'
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'EndianType' 'BigEndian' = int32(0x00000000)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'EndianType' 'LittleEndian' = int32(0x00000001)
  }
  .class public abstract sealed 'ExpressionBuilder'
    extends ['mscorlib']'System'.'Object'
  {
    .method public static hidebysig 
      class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'Build'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BaseNode' 'node')
    {
      ret
    }
  }
  .class public serializable 'ExpressionEvaluatorException'
    extends ['mscorlib']'System'.'Exception'
  {
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(string 'message')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(string 'message', class ['mscorlib']'System'.'Exception' 'innerException')
    {
      ret
    }
    .method family hidebysig specialname 
      instance void '.ctor'(class ['mscorlib']'System.Runtime.Serialization'.'SerializationInfo' 'info', valuetype ['mscorlib']'System.Runtime.Serialization'.'StreamingContext' 'context')
    {
      ret
    }
  }
  .class public 'ExpressionLexer'
    extends ['mscorlib']'System'.'Object'
  {
    .method public hidebysig specialname 
      instance void '.ctor'(string 'expression')
    {
      ret
    }
    .method public hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken' 'GetNextToken'()
    {
      ret
    }
    .method family hidebysig 
      instance class ['mscorlib']'System.Collections.Generic'.'IEnumerator`1'<class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken'> 'Tokenize'(string 'expression')
    {
      ret
    }
    .method family static hidebysig 
      bool 'IsIdentifier'(char 'ch', bool 'start')
    {
      ret
    }
    .method family static hidebysig 
      bool 'IsNumber'(char 'ch', bool 'start')
    {
      ret
    }
    .method family static hidebysig 
      bool 'IsWhitespace'(char 'ch')
    {
      ret
    }
    .method family static hidebysig 
      bool 'IsOperator'(char 'ch')
    {
      ret
    }
    .method family static hidebysig 
      bool 'IsSeparator'(char 'ch')
    {
      ret
    }
    .method family static hidebysig 
      bool 'IsSupportedOperator'(string 'op')
    {
      ret
    }
    .method family static hidebysig 
      class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken' 'MakeOperatorToken'(string 'op')
    {
      ret
    }
    .method family static hidebysig 
      class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken' 'MakeNumberToken'(string 'number')
    {
      ret
    }
    .method family static hidebysig 
      class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken' 'MakeIdentifierToken'(string 'identifier')
    {
      ret
    }
    .method family static hidebysig 
      class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken' 'MakeSeparatorToken'(string 'separator')
    {
      ret
    }
    .method family static hidebysig 
      class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken' 'MakeInvalidToken'(string 'invalid')
    {
      ret
    }
    .method family static hidebysig 
      class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken' 'MakeTokenFromState'(string 'token', valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ScannerState' 'state')
    {
      ret
    }
  }
  .class public 'ExpressionNode'
    extends 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BaseNode'
  {
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken' 'token')
    {
      ret
    }
    .method public virtual hidebysig specialname 
      instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'get_Type'()
    {
      ret
    }
    .method public virtual hidebysig specialname 
      instance string 'get_Text'()
    {
      ret
    }
    .method public virtual hidebysig 
      instance string 'ToString'()
    {
      ret
    }
    .property instance string 'Text'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode'::'get_Text'()
    }
    .property instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Type'()
    {
      .get instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode'::'get_Type'()
    }
  }
  .class public 'ExpressionParser'
    extends ['mscorlib']'System'.'Object'
  {
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITokenStream' 'stream', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'context')
    {
      ret
    }
    .method public hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'Parse'()
    {
      ret
    }
    .method family hidebysig 
      instance void 'GetNextToken'()
    {
      ret
    }
    .method family hidebysig 
      instance void 'Expect'(string 'expectedToken')
    {
      ret
    }
    .method family hidebysig 
      instance bool 'Try'(string 'token')
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'LazyOr'()
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'LazyAnd'()
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'BitOr'()
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'BitXor'()
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'BitAnd'()
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'Relation'()
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'Shift'()
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'Add'()
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'Multiply'()
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'Unary'()
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'Sizeof'()
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'Literal'()
    {
      ret
    }
    .method family hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionNode' 'Primary'()
    {
      ret
    }
    .method public static hidebysig 
      bool 'TryConvertNumber'(string 'representation', [out] int32& 'value')
    {
      ret
    }
    .method public static hidebysig 
      bool 'TryConvertType'(string 'representation', [out] class ['mscorlib']'System'.'Type'& 'type')
    {
      ret
    }
  }
  .class public 'ExpressionVisitor'
    extends ['mscorlib']'System'.'Object'
    implements 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpressionVisitor'
  {
    .method public hidebysig specialname 
      instance object 'get_EvaluationResult'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'context')
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance void 'Visit'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'expression')
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance void 'Visit'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpression' 'expression')
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance void 'Visit'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpression' 'expression')
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance void 'Visit'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'FunctionExpression' 'expression')
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance void 'Visit'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpression' 'expression')
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance void 'Visit'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ConditionalExpression' 'expression')
    {
      ret
    }
    .method family static hidebysig 
      string 'GetBinaryOperatorString'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpressionType' 'type')
    {
      ret
    }
    .method family static hidebysig 
      string 'GetUnaryOperatorString'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpressionType' 'type')
    {
      ret
    }
    .property instance object 'EvaluationResult'()
    {
      .get instance object 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionVisitor'::'get_EvaluationResult'()
    }
  }
  .class public 'FunctionExpression'
    extends 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BaseExpression'
  {
    .method public hidebysig specialname 
      instance string 'get_FunctionName'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_FunctionName'(string 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'get_Expression'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_Expression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance string 'get_Text'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_Text'(string 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(string 'functionName', string 'text', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'expression')
    {
      ret
    }
    .method public virtual hidebysig 
      instance void 'Accept'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpressionVisitor' 'visitor')
    {
      ret
    }
    .property instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'Expression'()
    {
      .get instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'FunctionExpression'::'get_Expression'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'FunctionExpression'::'set_Expression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression')
    }
    .property instance string 'FunctionName'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'FunctionExpression'::'get_FunctionName'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'FunctionExpression'::'set_FunctionName'(string)
    }
    .property instance string 'Text'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'FunctionExpression'::'get_Text'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'FunctionExpression'::'set_Text'(string)
    }
  }
  .class public sealed 'HandleAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .custom instance void ['mscorlib']'System'.'ObsoleteAttribute'::.ctor(string) = (01 00 1B 48 61 6E 64 6C 65 41 74 74 72 69 62 75 74 65 20 69 73 20 6F 62 73 6F 6C 65 74 65 00 00)
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
  }
  .class public interface abstract 'IEvaluationContext'
  {
    .method public virtual hidebysig newslot abstract 
      instance bool 'TryResolveSymbol'(string 'symbol', [out] int32& 'value')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance bool 'TryResolveCustomType'(string 'typeName', [out] string& 'typeInfo')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance bool 'TryResolveDereference'(string 'variable', [out] int32& 'value', [out] int32& 'pointerValue')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'ReportError'(string 'message')
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance class ['mscorlib']'System.Collections.Generic'.'IDictionary`2'<string,object> 'get_Variables'()
    {
    }
    .property instance class ['mscorlib']'System.Collections.Generic'.'IDictionary`2'<string,object> 'Variables'()
    {
      .get instance class ['mscorlib']'System.Collections.Generic'.'IDictionary`2'<string,object> 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext'::'get_Variables'()
    }
  }
  .class public interface abstract 'IExpression'
  {
    .method public virtual hidebysig newslot abstract 
      instance void 'Accept'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpressionVisitor' 'visitor')
    {
    }
  }
  .class public interface abstract 'IExpressionVisitor'
  {
    .method public virtual hidebysig newslot abstract 
      instance void 'Visit'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'expression')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'Visit'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpression' 'expression')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'Visit'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BinaryExpression' 'expression')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'Visit'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ConditionalExpression' 'expression')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'Visit'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpression' 'expression')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'Visit'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'FunctionExpression' 'expression')
    {
    }
  }
  .class public interface abstract 'IGenericTypeMarshaler'
  {
    .method public virtual hidebysig newslot abstract 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'Instantiate'(class ['mscorlib']'System'.'Type' 'baseType', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler'[] 'elementMarshalers')
    {
      .param [2]
      .custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
    }
  }
  .class public interface abstract 'INode'
  {
    .method public virtual hidebysig newslot abstract specialname 
      instance int32 'get_ChildCount'()
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'get_Type'()
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance string 'get_Text'()
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'AddChild'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'INode' 'child')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'INode' 'GetChild'(int32 'childIndex')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance string 'DumpTree'()
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance string 'ToString'()
    {
    }
    .property instance int32 'ChildCount'()
    {
      .get instance int32 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'INode'::'get_ChildCount'()
    }
    .property instance string 'Text'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'INode'::'get_Text'()
    }
    .property instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Type'()
    {
      .get instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'INode'::'get_Type'()
    }
  }
  .class public interface abstract 'IRegion'
  {
    .method public virtual hidebysig newslot abstract 
      instance void 'WriteByte'(uint8 'value')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'WriteInt16'(int16 'value')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'WriteInt32'(int32 'value')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'WriteInt64'(int64 'value')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'WriteIntPtr'(native int 'value')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance uint8 'ReadByte'()
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance int16 'ReadInt16'()
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance int32 'ReadInt32'()
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance int64 'ReadInt64'()
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance native int 'ReadIntPtr'()
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance int32 'get_SpaceLeft'()
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance int32 'get_Offset'()
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'set_Offset'(int32 'value')
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance native int 'get_NativeMemory'()
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance bool 'TryReset'()
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance bool 'get_UseSpaceChecking'()
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'set_UseSpaceChecking'(bool 'value')
    {
    }
    .property instance native int 'NativeMemory'()
    {
      .get instance native int 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IRegion'::'get_NativeMemory'()
    }
    .property instance int32 'Offset'()
    {
      .get instance int32 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IRegion'::'get_Offset'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IRegion'::'set_Offset'(int32)
    }
    .property instance int32 'SpaceLeft'()
    {
      .get instance int32 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IRegion'::'get_SpaceLeft'()
    }
    .property instance bool 'UseSpaceChecking'()
    {
      .get instance bool 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IRegion'::'get_UseSpaceChecking'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IRegion'::'set_UseSpaceChecking'(bool)
    }
  }
  .class public interface abstract 'IToken'
  {
    .method public virtual hidebysig newslot abstract specialname 
      instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'get_Type'()
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'set_Type'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'value')
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance string 'get_Text'()
    {
    }
    .method public virtual hidebysig newslot abstract specialname 
      instance void 'set_Text'(string 'value')
    {
    }
    .property instance string 'Text'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken'::'get_Text'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken'::'set_Text'(string)
    }
    .property instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Type'()
    {
      .get instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken'::'get_Type'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken'::'set_Type'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType')
    }
  }
  .class public interface abstract 'ITokenStream'
  {
    .method public virtual hidebysig newslot abstract 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken' 'NextToken'()
    {
    }
  }
  .class public interface abstract 'ITypeMarshaler'
  {
    .method public virtual hidebysig newslot abstract 
      instance int32 'GetSize'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler' 'marshaler', valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor', object 'value')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance int32 'GetAlignment'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler' 'marshaler', valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance class ['mscorlib']'System'.'Type' 'GetNativeType'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler' 'marshaler', valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance void 'Marshal'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler' 'marshaler', valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor', object 'value')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance object 'Unmarshal'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler' 'marshaler', valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor')
    {
    }
  }
  .class public sealed 'IdentifierBindingAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(string 'name', class ['mscorlib']'System'.'Type' 'targetType')
    {
      ret
    }
  }
  .class public sealed 'IndirectAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
  }
  .class public sealed 'InlineAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
  }
  .class public sealed 'LengthAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(string 'expression')
    {
      ret
    }
  }
  .class public sealed 'LengthMode'
    extends ['mscorlib']'System'.'Enum'
  {
    .field public rtspecialname specialname int32 'value__'
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'LengthMode' 'Bit' = int32(0x00000000)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'LengthMode' 'Byte' = int32(0x00000001)
  }
  .class public sealed 'MarshalingConditionAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 01 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance string 'get_MethodName'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(string 'methodName')
    {
      ret
    }
    .property instance string 'MethodName'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConditionAttribute'::'get_MethodName'()
    }
  }
  .class public abstract 'MarshalingConfiguration'
    extends ['mscorlib']'System'.'Object'
  {
    .method public hidebysig 
      instance void 'RegisterMarshaler'(class ['mscorlib']'System'.'Type' 'type', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'typeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterGenericMarshaler'(class ['mscorlib']'System'.'Type' 'genericType', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IGenericTypeMarshaler' 'genericTypeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterGenericMarshalerInline'(class ['mscorlib']'System'.'Type' 'genericType', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IGenericTypeMarshaler' 'genericTypeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterArrayMarshaler'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IGenericTypeMarshaler' 'genericTypeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterArrayMarshalerInline'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IGenericTypeMarshaler' 'genericTypeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterIndirectMarshaler'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IGenericTypeMarshaler' 'genericTypeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterStructMarshaler'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'typeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterUnionMarshaler'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'typeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterBitMarshaler'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'typeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterAsn1Marshaler'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'EncodingRule' 'rule', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'typeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterStringMarshaler'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'typeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterStringMarshalerInline'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'typeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterStringASCIIMarshaler'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'typeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance void 'RegisterStringASCIIMarshalerInline'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'typeMarshaler')
    {
      ret
    }
    .method public hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'GetMarshaler'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler' 'marshaler', valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor')
    {
      ret
    }
    .method family virtual hidebysig newslot 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'GetMarshaler'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler' 'marshaler', valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor', bool 'processIndirect', bool 'processBinding')
    {
      ret
    }
    .method family hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
  }
  .class public sequential sealed 'MarshalingDescriptor'
    extends ['mscorlib']'System'.'ValueType'
  {
    .method public hidebysig specialname 
      instance class ['mscorlib']'System'.'Type' 'get_Type'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance class ['mscorlib']'System.Reflection'.'ICustomAttributeProvider' 'get_Attributes'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance class ['mscorlib']'System'.'Type' 'get_ContainerType'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class ['mscorlib']'System'.'Type' 'type', class ['mscorlib']'System.Reflection'.'ICustomAttributeProvider' 'attributes')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class ['mscorlib']'System'.'Type' 'type', class ['mscorlib']'System.Reflection'.'ICustomAttributeProvider' 'attributes', class ['mscorlib']'System'.'Type' 'containerType')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class ['mscorlib']'System'.'Type' 'type')
    {
      ret
    }
    .method public virtual hidebysig 
      instance string 'ToString'()
    {
      ret
    }
    .method public static hidebysig 
      bool 'HasAttribute'(class ['mscorlib']'System.Reflection'.'ICustomAttributeProvider' 'provider', class ['mscorlib']'System'.'Type' 'expectedType')
    {
      ret
    }
    .method public static hidebysig 
      bool 'TryGetAttribute'<T>(class ['mscorlib']'System.Reflection'.'ICustomAttributeProvider' 'provider', class ['mscorlib']'System'.'Type' 'expectedType', string 'fieldName', [out] !!0& 'fieldValue')
    {
      ret
    }

    //This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
    .field private int32 __Asmmeta_Private_Field
    .property instance class ['mscorlib']'System.Reflection'.'ICustomAttributeProvider' 'Attributes'()
    {
      .get instance class ['mscorlib']'System.Reflection'.'ICustomAttributeProvider' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor'::'get_Attributes'()
    }
    .property instance class ['mscorlib']'System'.'Type' 'ContainerType'()
    {
      .get instance class ['mscorlib']'System'.'Type' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor'::'get_ContainerType'()
    }
    .property instance class ['mscorlib']'System'.'Type' 'Type'()
    {
      .get instance class ['mscorlib']'System'.'Type' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor'::'get_Type'()
    }
  }
  .class public sealed 'MarshalingType'
    extends ['mscorlib']'System'.'Enum'
  {
    .field public rtspecialname specialname int32 'value__'
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingType' 'Marshal' = int32(0x00000000)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingType' 'Unmarshal' = int32(0x00000001)
  }
  .class public 'MultipleExpressionEvaluator'
    extends ['mscorlib']'System'.'Object'
  {
    .method public hidebysig specialname 
      instance string 'get_Expression'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_Expression'(string 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'get_Context'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_Context'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'context')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'context', string 'expression')
    {
      ret
    }
    .method public hidebysig 
      instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<object> 'Evaluate'()
    {
      ret
    }
    .property instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'Context'()
    {
      .get instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MultipleExpressionEvaluator'::'get_Context'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MultipleExpressionEvaluator'::'set_Context'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext')
    }
    .property instance string 'Expression'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MultipleExpressionEvaluator'::'get_Expression'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MultipleExpressionEvaluator'::'set_Expression'(string)
    }
  }
  .class public 'NativeMarshalingConfiguration'
    extends 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration'
  {
    .method family hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
    .method public static hidebysig specialname 
      class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration' 'get_Configuration'()
    {
      ret
    }
    .property class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration' 'Configuration'()
    {
      .get class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'NativeMarshalingConfiguration'::'get_Configuration'()
    }
  }
  .class public sealed 'PossibleValueAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(class ['mscorlib']'System'.'Type' 'enumType')
    {
      ret
    }
    .method public hidebysig specialname 
      instance class ['mscorlib']'System'.'Type' 'get_EnumType'()
    {
      ret
    }
    .property instance class ['mscorlib']'System'.'Type' 'EnumType'()
    {
      .get instance class ['mscorlib']'System'.'Type' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'PossibleValueAttribute'::'get_EnumType'()
    }
  }
  .class public sealed 'PossibleValueRangeAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 01)
    .method public hidebysig specialname 
      instance void '.ctor'(string 'minValue', string 'maxValue')
    {
      ret
    }
    .method public hidebysig specialname 
      instance string 'get_MinValue'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance string 'get_MaxValue'()
    {
      ret
    }
    .property instance string 'MaxValue'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'PossibleValueRangeAttribute'::'get_MaxValue'()
    }
    .property instance string 'MinValue'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'PossibleValueRangeAttribute'::'get_MinValue'()
    }
  }
  .class public sealed 'RangeAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(string 'expression')
    {
      ret
    }
  }
  .class public sealed 'RequirementAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 FF 7F 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(string 'protocolDocName', string 'sectionNumber', int32 'requirementID', string 'description')
    {
      ret
    }
    .method public hidebysig specialname 
      instance int32 'get_RequirementID'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance string 'get_Description'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance string 'get_ProtocolDocName'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance string 'get_SectionNumber'()
    {
      ret
    }
    .property instance string 'Description'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'RequirementAttribute'::'get_Description'()
    }
    .property instance string 'ProtocolDocName'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'RequirementAttribute'::'get_ProtocolDocName'()
    }
    .property instance int32 'RequirementID'()
    {
      .get instance int32 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'RequirementAttribute'::'get_RequirementID'()
    }
    .property instance string 'SectionNumber'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'RequirementAttribute'::'get_SectionNumber'()
    }
  }
  .class public sealed 'ScannerState'
    extends ['mscorlib']'System'.'Enum'
  {
    .field public rtspecialname specialname int32 'value__'
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ScannerState' 'Identifier' = int32(0x00000002)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ScannerState' 'Number' = int32(0x00000001)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ScannerState' 'Operator' = int32(0x00000003)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ScannerState' 'Space' = int32(0x00000000)
  }
  .class public 'SingleExpressionEvaluator'
    extends ['mscorlib']'System'.'Object'
  {
    .method public hidebysig specialname 
      instance string 'get_Expression'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_Expression'(string 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'get_Context'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_Context'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'context')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'context', string 'expression')
    {
      ret
    }
    .method public hidebysig 
      instance object 'Evaluate'()
    {
      ret
    }
    .property instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'Context'()
    {
      .get instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'SingleExpressionEvaluator'::'get_Context'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'SingleExpressionEvaluator'::'set_Context'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext')
    }
    .property instance string 'Expression'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'SingleExpressionEvaluator'::'get_Expression'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'SingleExpressionEvaluator'::'set_Expression'(string)
    }
  }
  .class public sealed 'SizeAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(string 'expression')
    {
      ret
    }
  }
  .class public sealed 'StaticSizeAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(int32 'size')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(int32 'size', valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'StaticSizeMode' 'mode')
    {
      ret
    }
  }
  .class public sealed 'StaticSizeMode'
    extends ['mscorlib']'System'.'Enum'
  {
    .field public rtspecialname specialname int32 'value__'
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'StaticSizeMode' 'Bytes' = int32(0x00000000)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'StaticSizeMode' 'Elements' = int32(0x00000001)
  }
  .class public sealed 'StringAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'StringEncoding' 'encodingType')
    {
      ret
    }
  }
  .class public sealed 'StringEncoding'
    extends ['mscorlib']'System'.'Enum'
  {
    .field public rtspecialname specialname int32 'value__'
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'StringEncoding' 'ASCII' = int32(0x00000001)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'StringEncoding' 'Unicode' = int32(0x00000000)
  }
  .class public sealed 'SwitchAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(string 'expression')
    {
      ret
    }
  }
  .class public 'Token'
    extends ['mscorlib']'System'.'Object'
    implements 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken'
  {
    .method public hidebysig specialname 
      instance void '.ctor'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'type')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'type', string 'text')
    {
      ret
    }
    .method public final virtual hidebysig newslot specialname 
      instance string 'get_Text'()
    {
      ret
    }
    .method public final virtual hidebysig newslot specialname 
      instance void 'set_Text'(string 'value')
    {
      ret
    }
    .method public virtual hidebysig newslot specialname 
      instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'get_Type'()
    {
      ret
    }
    .method public virtual hidebysig newslot specialname 
      instance void 'set_Type'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'value')
    {
      ret
    }
    .property instance string 'Text'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'Token'::'get_Text'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'Token'::'set_Text'(string)
    }
    .property instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Type'()
    {
      .get instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'Token'::'get_Type'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'Token'::'set_Type'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType')
    }
  }
  .class public 'TokenStream'
    extends ['mscorlib']'System'.'Object'
    implements 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITokenStream'
  {
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ExpressionLexer' 'lexer')
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IToken' 'NextToken'()
    {
      ret
    }
  }
  .class public sealed 'TokenType'
    extends ['mscorlib']'System'.'Enum'
  {
    .field public rtspecialname specialname int32 'value__'
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'And' = int32(0x00000014)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'BitAnd' = int32(0x00000012)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'BitNot' = int32(0x00000022)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'BitOr' = int32(0x00000013)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'BitXor' = int32(0x00000011)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Bracket' = int32(0x0000001C)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Colon' = int32(0x00000017)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Comma' = int32(0x0000001D)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Conditional' = int32(0x00000016)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Dereference' = int32(0x00000025)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Divide' = int32(0x00000007)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Empty' = int32(0x00000003)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'EndOfFile' = int32(0x00000000)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Equal' = int32(0x0000000B)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Function' = int32(0x00000020)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Greater' = int32(0x0000000E)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'GreaterOrEqual' = int32(0x00000010)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Integer' = int32(0x00000018)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Invalid' = int32(0x00000001)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Lesser' = int32(0x0000000D)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'LesserOrEqual' = int32(0x0000000F)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Minus' = int32(0x00000005)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Mod' = int32(0x00000008)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Multiply' = int32(0x00000006)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Negative' = int32(0x00000023)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Not' = int32(0x00000021)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'NotEqual' = int32(0x0000000C)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Or' = int32(0x00000015)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Plus' = int32(0x00000004)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Positive' = int32(0x00000024)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Primary' = int32(0x0000001F)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Separator' = int32(0x0000001A)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'ShiftLeft' = int32(0x00000009)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'ShiftRight' = int32(0x0000000A)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'SizeOf' = int32(0x0000001B)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'String' = int32(0x00000019)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Unknown' = int32(0x00000002)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'TokenType' 'Variable' = int32(0x0000001E)
  }
  .class public 'UnaryExpression'
    extends 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BaseExpression'
  {
    .method public hidebysig specialname 
      instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpressionType' 'get_Type'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_Type'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpressionType' 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'get_Expression'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_Expression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpressionType' 'type', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'expression')
    {
      ret
    }
    .method public virtual hidebysig 
      instance void 'Accept'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpressionVisitor' 'visitor')
    {
      ret
    }
    .property instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'Expression'()
    {
      .get instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpression'::'get_Expression'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpression'::'set_Expression'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpression')
    }
    .property instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpressionType' 'Type'()
    {
      .get instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpressionType' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpression'::'get_Type'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpression'::'set_Type'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpressionType')
    }
  }
  .class public sealed 'UnaryExpressionType'
    extends ['mscorlib']'System'.'Enum'
  {
    .field public rtspecialname specialname int32 'value__'
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpressionType' 'BitNot' = int32(0x00000001)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpressionType' 'Dereference' = int32(0x00000004)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpressionType' 'Negative' = int32(0x00000002)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpressionType' 'Not' = int32(0x00000000)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'UnaryExpressionType' 'Positive' = int32(0x00000003)
  }
  .class public sealed 'UnionAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 08 00 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .method public hidebysig specialname 
      instance void '.ctor'(string 'switchTypeExpression')
    {
      ret
    }
  }
  .class public sealed 'UniqueAttribute'
    extends ['mscorlib']'System'.'Attribute'
  {
    .custom instance void ['mscorlib']'System'.'AttributeUsageAttribute'::.ctor(valuetype ['mscorlib']'System'.'AttributeTargets') = (01 00 00 09 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
    .custom instance void ['mscorlib']'System'.'ObsoleteAttribute'::.ctor(string) = (01 00 1B 48 61 6E 64 6C 65 41 74 74 72 69 62 75 74 65 20 69 73 20 6F 62 73 6F 6C 65 74 65 00 00)
    .method public hidebysig specialname 
      instance void '.ctor'()
    {
      ret
    }
  }
  .class public 'ValueExpression'
    extends 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'BaseExpression'
  {
    .method public hidebysig specialname 
      instance string 'get_Text'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_Text'(string 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpressionType' 'get_Type'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_Type'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpressionType' 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(string 'text', valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpressionType' 'type')
    {
      ret
    }
    .method public virtual hidebysig 
      instance void 'Accept'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IExpressionVisitor' 'visitor')
    {
      ret
    }
    .property instance string 'Text'()
    {
      .get instance string 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpression'::'get_Text'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpression'::'set_Text'(string)
    }
    .property instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpressionType' 'Type'()
    {
      .get instance valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpressionType' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpression'::'get_Type'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpression'::'set_Type'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpressionType')
    }
  }
  .class public sealed 'ValueExpressionType'
    extends ['mscorlib']'System'.'Enum'
  {
    .field public rtspecialname specialname int32 'value__'
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpressionType' 'Integer' = int32(0x00000000)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpressionType' 'Null' = int32(0x00000002)
    .field static public literal valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ValueExpressionType' 'Variable' = int32(0x00000001)
  }
}
.namespace 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'
{
  .class public 'Marshaler'
    extends ['mscorlib']'System'.'Object'
    implements ['mscorlib']'System'.'IDisposable', 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IEvaluationContext'
  {
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'host', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration' 'configuration')
    {
      ret
    }
    .method public hidebysig specialname 
      instance void '.ctor'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingConfiguration' 'configuration')
    {
      ret
    }
    .method public static hidebysig 
      void 'Reset'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'get_Host'()
    {
      ret
    }
    .method public hidebysig 
      instance void 'TestAssertFail'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'desc', string 'message', object[] 'parameters')
    {
      .param [3]
      .custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
      ret
    }
    .method public hidebysig 
      instance void 'TestAssertFail'(string 'message', object[] 'parameters')
    {
      .param [2]
      .custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
      ret
    }
    .method public hidebysig 
      instance void 'TestAssumeFail'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'desc', string 'message', object[] 'parameters')
    {
      .param [3]
      .custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
      ret
    }
    .method public hidebysig 
      instance void 'TestAssumeFail'(string 'message', object[] 'parameters')
    {
      .param [2]
      .custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
      ret
    }
    .method public hidebysig 
      instance void 'DebugFail'(string 'message', object[] 'parameters')
    {
      .param [2]
      .custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
      ret
    }
    .method public hidebysig 
      instance void 'Trace'(string 'message', object[] 'parameters')
    {
      .param [2]
      .custom instance void ['mscorlib']'System'.'ParamArrayAttribute'::.ctor() = (01 00 00 00)
      ret
    }
    .method public hidebysig specialname 
      instance class ['mscorlib']'System.Collections.Generic'.'Dictionary`2'<string,object> 'get_SymbolStore'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<native int> 'get_ForeignMemory'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance bool 'get_IsProbingUnmarshaling'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_IsProbingUnmarshaling'(bool 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance int32 'get_CurrentBitCount'()
    {
      ret
    }
    .method public hidebysig 
      instance void 'CheckBitAlignment'()
    {
      ret
    }
    .method public hidebysig 
      instance void 'EnterContext'()
    {
      ret
    }
    .method public hidebysig 
      instance void 'ExitContext'()
    {
      ret
    }
    .method public hidebysig 
      instance void 'DefineCustomType'(string 'typeName', object 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'DefineSymbol'(string 'symbol', object 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'DefinePointerSymbol'(string 'symbol', object 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'DefineSymbols'(class ['mscorlib']'System.Reflection'.'FieldInfo'[] 'fields', object 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance int32 'get_RegionOffset'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_RegionOffset'(int32 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance bool 'get_UseSpaceChecking'()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void 'set_UseSpaceChecking'(bool 'value')
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance bool 'TryResolveSymbol'(string 'symbol', [out] int32& 'value')
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance bool 'TryResolveCustomType'(string 'typeName', [out] string& 'size')
    {
      ret
    }
    .method public hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IRegion' 'AllocateRegion'(int32 'size')
    {
      ret
    }
    .method public hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IRegion' 'MakeRegion'(native int 'ptr', int32 'size')
    {
      ret
    }
    .method public hidebysig 
      instance void 'MarkMemoryForDispose'(native int 'ptr')
    {
      ret
    }
    .method public hidebysig 
      instance void 'MarkForeignMemoryForDispose'(native int 'ptr')
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance void 'Dispose'()
    {
      ret
    }
    .method family virtual hidebysig 
      instance void 'Finalize'()
    {
      ret
    }
    .method family virtual hidebysig newslot 
      instance void 'Dispose'(bool 'disposing')
    {
      ret
    }
    .method public hidebysig 
      instance void 'FreeMemory'()
    {
      ret
    }
    .method public hidebysig 
      instance void 'EnterRegion'(class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IRegion' 'newRegion')
    {
      ret
    }
    .method public hidebysig 
      instance void 'ExitRegion'()
    {
      ret
    }
    .method public hidebysig 
      instance class 'Microsoft.Protocols.TestTools'.'IdentifierBinding`1'<object> 'GetBinding'(string 'name')
    {
      ret
    }
    .method public hidebysig 
      instance void 'WriteBit'(int32 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'WriteByte'(uint8 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'WriteInt16'(int16 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'WriteInt32'(int32 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'WriteInt64'(int64 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'WriteIntPtr'(native int 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'WriteStructure'(object 'value', int32 'size')
    {
      ret
    }
    .method public hidebysig 
      instance int32 'ReadBit'()
    {
      ret
    }
    .method public hidebysig 
      instance uint8 'ReadByte'()
    {
      ret
    }
    .method public hidebysig 
      instance int16 'ReadInt16'()
    {
      ret
    }
    .method public hidebysig 
      instance int32 'ReadInt32'()
    {
      ret
    }
    .method public hidebysig 
      instance int64 'ReadInt64'()
    {
      ret
    }
    .method public hidebysig 
      instance native int 'ReadIntPtr'()
    {
      ret
    }
    .method public hidebysig 
      instance object 'ReadStructure'(class ['mscorlib']'System'.'Type' 'type', int32 'size')
    {
      ret
    }
    .method public hidebysig 
      instance void 'Skip'(int32 'bytes')
    {
      ret
    }
    .method public hidebysig 
      instance void 'Clear'(int32 'bytes')
    {
      ret
    }
    .method public hidebysig 
      instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'ITypeMarshaler' 'GetMarshaler'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor')
    {
      ret
    }
    .method public hidebysig 
      instance int32 'GetSize'(object 'value')
    {
      ret
    }
    .method public hidebysig 
      instance int32 'GetSize'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor', object 'value')
    {
      ret
    }
    .method public hidebysig 
      instance int32 'GetAlignment'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor')
    {
      ret
    }
    .method public hidebysig 
      instance class ['mscorlib']'System'.'Type' 'GetNativeType'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor')
    {
      ret
    }
    .method public hidebysig 
      instance void 'Marshal'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor', object 'value')
    {
      ret
    }
    .method public hidebysig 
      instance void 'MarshalInto'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IRegion' 'customRegion', object 'value')
    {
      ret
    }
    .method public hidebysig 
      instance object 'Unmarshal'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor')
    {
      ret
    }
    .method public hidebysig 
      instance object 'UnmarshalFrom'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor', class 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'IRegion' 'customRegion')
    {
      ret
    }
    .method public hidebysig 
      instance void 'GetAdvocatedSize'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor', [out] int32& 'size', [out] int32& 'length')
    {
      ret
    }
    .method public hidebysig 
      instance void 'GetMultipleAdvocatedSizes'(valuetype 'Microsoft.Protocols.TestTools.StackSdk.Messages.Marshaling'.'MarshalingDescriptor' 'descriptor', [out] class ['mscorlib']'System.Collections.Generic'.'IList`1'<int32>& 'sizes', [out] class ['mscorlib']'System.Collections.Generic'.'IList`1'<int32>& 'lengths')
    {
      ret
    }
    .method public hidebysig 
      instance int32 'Evaluate'(string 'expression')
    {
      ret
    }
    .method public hidebysig 
      instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<valuetype ['mscorlib']'System'.'Nullable`1'<int32>> 'EvaluateMultipleExpressions'(string 'expression')
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance void 'ReportError'(string 'message')
    {
      ret
    }
    .method public hidebysig 
      instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<valuetype ['mscorlib']'System'.'Nullable`1'<int32>> 'EvaluateConstant'(string 'expression')
    {
      ret
    }
    .method public final virtual hidebysig newslot specialname 
      instance class ['mscorlib']'System.Collections.Generic'.'IDictionary`2'<string,object> 'get_Variables'()
    {
      ret
    }
    .method public final virtual hidebysig newslot 
      instance bool 'TryResolveDereference'(string 'variable', [out] int32& 'value', [out] int32& 'pointerValue')
    {
      ret
    }
    .property instance int32 'CurrentBitCount'()
    {
      .get instance int32 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler'::'get_CurrentBitCount'()
    }
    .property instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<native int> 'ForeignMemory'()
    {
      .get instance class ['mscorlib']'System.Collections.Generic'.'IList`1'<native int> 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler'::'get_ForeignMemory'()
    }
    .property instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'Host'()
    {
      .get instance class 'Microsoft.Protocols.TestTools.StackSdk.Messages'.'IRuntimeHost' 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler'::'get_Host'()
    }
    .property instance bool 'IsProbingUnmarshaling'()
    {
      .get instance bool 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler'::'get_IsProbingUnmarshaling'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler'::'set_IsProbingUnmarshaling'(bool)
    }
    .property instance int32 'RegionOffset'()
    {
      .get instance int32 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler'::'get_RegionOffset'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler'::'set_RegionOffset'(int32)
    }
    .property instance class ['mscorlib']'System.Collections.Generic'.'Dictionary`2'<string,object> 'SymbolStore'()
    {
      .get instance class ['mscorlib']'System.Collections.Generic'.'Dictionary`2'<string,object> 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler'::'get_SymbolStore'()
    }
    .property instance bool 'UseSpaceChecking'()
    {
      .get instance bool 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler'::'get_UseSpaceChecking'()
      .set instance void 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler'::'set_UseSpaceChecking'(bool)
    }
    .property instance class ['mscorlib']'System.Collections.Generic'.'IDictionary`2'<string,object> 'Variables'()
    {
      .get instance class ['mscorlib']'System.Collections.Generic'.'IDictionary`2'<string,object> 'Microsoft.Protocols.TestTools.StackSdk.Messages.Runtime.Marshaling'.'Marshaler'::'get_Variables'()
    }
  }
}


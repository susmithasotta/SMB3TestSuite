// 
// This file was generated by the Objective Systems ASN1C Compiler
// (http://www.obj-sys.com).  Version: 6.10, Date: 01-Jul-2008.
// 
using System;
using Com.Objsys.Asn1.Runtime;

namespace Microsoft.Protocols.TestTools.StackSdk.Security.Kile {

   public class TicketFlags : KerberosFlags {
      /// <summary>
      /// This constructor creates an empty bit string that can be used in 
      /// a decode method call to receive a bit string value.
      /// </summary>
      public TicketFlags () : base()
      {
         SetKey (_KerberosV5Spec2Values._rtkey);
      }

      /// <summary>
      /// This constructor initializes the bit string value with the 
      /// given number of bits and data.
      /// </summary>
      /// <param name="numbits_"> Number of bits </param>
      /// <param name="data"> Binary bit string contents </param>
      public TicketFlags (int numbits_, byte[] data) :
         base (numbits_, data)
      {
         SetKey (_KerberosV5Spec2Values._rtkey);
      }

      /// <summary>
      /// This constructor initializes the bit string value from the given 
      /// bool array.  Each array position corresponds to a bit in the 
      /// bit string.
      /// </summary>
      /// <param name="bitValues"> The bool array </param>
      public TicketFlags (bool[] bitValues) :
         base (bitValues)
      {
         SetKey (_KerberosV5Spec2Values._rtkey);
      }

      /// <summary>
      /// This constructor parses the given ASN.1 value text (either a 
      /// binary or hex data string) and assigns the values to the internal
      /// bit string.
      ///
      /// Examples of valid value formats are as follows:
      /// Binary string:    "'11010010111001'B"
      /// Hex string:       "'0fa56920014abc'H"
      /// </summary>
      /// <param name="value"> The ASN.1 value specification text </param>
      public TicketFlags (string value_) :
         base (value_)
      {
         SetKey (_KerberosV5Spec2Values._rtkey);
      }

      /// <summary>
      /// This constructor initializes the bit string value from the given 
      /// BitArray object.  The logical length of the BitSet is used 
      /// (i.e. position of last set bit).
      /// </summary>
      /// <param name="bitArray"> Csharp BitArray object </param>
      public TicketFlags (System.Collections.BitArray bitArray) :
         base (bitArray)
      {
         SetKey (_KerberosV5Spec2Values._rtkey);
      }

   }
}
